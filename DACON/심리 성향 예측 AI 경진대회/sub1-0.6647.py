# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jic3S9A6Zgsb9v7N4G9bWWhRTRTBCR8Z
"""

from google.colab import files
import pandas as pd
from sklearn.model_selection import train_test_split
import lightgbm as lgbm
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.linear_model import LogisticRegression

uploaded=files.upload()

test=pd.read_csv('test_x.csv', index_col=0)
train=pd.read_csv('train.csv', index_col=0)
submission=pd.read_csv('sample_submission.csv', index_col=0)

print(test.shape)
print(train.shape)

for i in range(train.shape[0]):
  now=train.loc[i, 'age_group']
  length=len(now)
  sub=now[:length-1]
  sub=int(sub)
  train.loc[i, 'age_group']=sub
  if train.loc[i, 'gender']=='Male':
    train.loc[i, 'gender']=1
  elif train.loc[i, 'gender']=='Female':
    train.loc[i, 'gender']=2
  
  if train.loc[i, 'race']=='Asian':
    train.loc[i, 'race']=1
  elif train.loc[i, 'race']=='Arab':
    train.loc[i, 'race']=2
  elif train.loc[i, 'race']=='Black':
    train.loc[i, 'race']=3
  elif train.loc[i, 'race']=='Indigenous Australian':
    train.loc[i, 'race']=4
  elif train.loc[i, 'race']=='Native American':
    train.loc[i, 'race']=5
  elif train.loc[i, 'race']=='White':
    train.loc[i, 'race']=6
  elif train.loc[i, 'race']=='Other':
    train.loc[i, 'race']=7

for i in range(test.shape[0]):
  now=test.loc[i, 'age_group']
  length=len(now)
  sub=now[:length-1]
  sub=int(sub)
  test.loc[i, 'age_group']=sub
  if test.loc[i, 'gender']=='Male':
    test.loc[i, 'gender']=1
  elif test.loc[i, 'gender']=='Female':
    test.loc[i, 'gender']=2
  
  if test.loc[i, 'race']=='Asian':
    test.loc[i, 'race']=1
  elif test.loc[i, 'race']=='Arab':
    test.loc[i, 'race']=2
  elif test.loc[i, 'race']=='Black':
    test.loc[i, 'race']=3
  elif test.loc[i, 'race']=='Indigenous Australian':
    test.loc[i, 'race']=4
  elif test.loc[i, 'race']=='Native American':
    test.loc[i, 'race']=5
  elif test.loc[i, 'race']=='White':
    test.loc[i, 'race']=6
  elif test.loc[i, 'race']=='Other':
    test.loc[i, 'race']=7

train_x=train.drop('voted', axis=1)
train_x=train_x.drop('religion', axis=1)
print(train_x.shape)
test=test.drop('religion', axis=1)
print(test.shape)

drop_val = ['QaA', 'QaE', 'QbA', 'QbE', 'QcA', 'QcE', 'QdA', 'QdE', 'QeA','QeE',
       'QfA', 'QfE', 'QgA', 'QgE', 'QhA', 'QhE', 'QiA', 'QiE', 'QjA', 'QjE',
       'QkA', 'QkE', 'QlA', 'QlE', 'QmA', 'QmE', 'QnA', 'QnE', 'QoA', 'QoE',
       'QpA', 'QpE', 'QqA', 'QqE', 'QrA', 'QrE', 'QsA', 'QsE', 'QtA', 'QtE','tp01', 'tp02', 'tp03', 'tp04', 'tp05',
       'tp06', 'tp07', 'tp08', 'tp09', 'tp10', 'urban', 'wf_01',
       'wf_02', 'wf_03', 'wr_01', 'wr_02', 'wr_03', 'wr_04', 'wr_05', 'wr_06',
       'wr_07', 'wr_08', 'wr_09', 'wr_10', 'wr_11', 'wr_12', 'wr_13']
train_x=train_x.drop(drop_val, axis=1)
test=test.drop(drop_val, axis=1)
train_x=train_x.drop('age_group', axis=1)
test=test.drop('age_group', axis=1)

train_x=train_x.drop('hand', axis=1)
test=test.drop('hand', axis=1)
train_x=train_x.drop('familysize', axis=1)
test=test.drop('familysize', axis=1)

train_y=train['voted']

model = LogisticRegression()
model.fit(train_x, train_y)

print(model.score(train_x, train_y))
pred_y=model.predict(test)

print(pred_y)

submission['voted']=pred_y
print(submission)
submission.to_csv('submission.csv')
files.download('submission.csv')